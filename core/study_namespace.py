import sys'''dir返回给定模块，类，实例，或者其他类型的所有成员组成的列表，这可能在交互式python解释器下很有用，也可以用在其他地方'''def dump(value):    print(value, '=>', dir(value))    pass# dump(0)# dump(1.0)# dump(0.0j) # complex number# dump([]) # list# dump({}) # dirctionary# dump(len) # function# dump(sys) # module'''使用dir函数查找类的所有成员'''class A:    def a(self):        pass    def b(self):        passclass B(A):    def c(self):        pass    def d(self):        pass# 返回一个有序列表，成员在列表中名称出现的越早，它所处的类层次越高，def get_members(klass, members=None):    if members is None:        members = []    for k in klass.__bases__:        get_members(k, members)    for m in dir(klass):        if m not in members:            members.append(m)            pass        pass    return members# print(get_members(A))# print(get_members(B))# print(get_members(IOError))'''vars函数'''book = 'library2'pages = 250scripts = 250print(vars())print("the %(book)s book contains more than %(scripts)s scripts" .format(vars().items()))